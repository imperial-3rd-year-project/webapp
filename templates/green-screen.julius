let dataURL;
let captured = false;

const w = 640;
const h = 480;
const p = w * h;

window.onload = function () {
    let webcamCanvas = document.getElementById("canvas");
    let webcamCtx = webcamCanvas.getContext("2d");
    // Setup webcam canvas
    webcamCtx.fillRect(0, 0, webcamCanvas.width, webcamCanvas.height);
    
    // Setup sockets
    let initialState = {
        webcamCanvas: webcamCanvas,
        webcamCtx: webcamCtx,
        drawBoxes: false
    };
    let state = buildState(initialState).withWebcam().withYolo().build();
    
    initialiseSocket(state);
    // Order is important!
    addSocketHandler(SOCKET_BEGIN_DEVICES, onBeginDevices);
    addSocketHandler(SOCKET_END_DEVICES, onEndDevices);
    addSocketHandler(SOCKET_RECEIVE_DEVICE, onReceiveDevice);
    
    addSocketHandler(SOCKET_BEGIN_YOLO, onYoloBegin);
    addSocketHandler(SOCKET_END_YOLO, onYoloEnd);
    addSocketHandler(SOCKET_RECEIVE_YOLO, onYoloReceive);
    
    addSocketHandler(SOCKET_END_GS, onGreenScreenEnd);
    addSocketHandler(SOCKET_RECEIVE_WEBCAM_FRAME, onWebcamFrame);
    setSocketHandler();

    document.getElementById("upload-image-input").onchange = function (event) {
        let input = event.target;
        let reader = new FileReader();
        reader.onload = function () {
            let dataURL = reader.result;
            let img = new Image();
            img.onload = function () {
                let canvas = document.createElement('canvas');
                canvas.width = 640;
                canvas.height = 480;
                let ctx = canvas.getContext('2d');
                if (img.width > img.height) {
                    let w = img.width * (480 / img.height);
                    ctx.drawImage(img, 0, 0, w, 480);
                } else {
                    let h = img.height * (640 / img.width);
                    ctx.drawImage(img, 0, 0, 640, h);
                }
                sendMsg(IMAGE.GREENSCREEN);
                let buff = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height).data.buffer;
                sendData(buff);
            };
            img.src = dataURL;
        };
        reader.readAsDataURL(input.files[0]);
    };

};

function onGreenScreenEnd(event, state) {
    document.getElementById('capture-btn').disabled = false;
}

function onYoloEnd(event, state) {
    state.fetchingYolo = false;
    if (state.drawBoxes) {
        drawBoundingBoxes(state.boundingBoxes, state.webcamCanvas.getContext('2d'));
    }
}

function onWebcamFrame(event, state) {
    if (!captured) {
        drawWebcamImage(event, state);
    }
}

function openWebcam() {
    let deviceSelect = document.getElementById("devices");
    let device = deviceSelect.value.split(":")[0];

    socket.send('OPEN ' + device);
    document.getElementById("webcam-btn").value = "Close Webcam"
    document.getElementById("webcam-btn").onclick = closeWebcam;
}

function closeWebcam() {
    socket.send('CLOSE');
    let webcamCanvas = document.getElementById("canvas");
    let webcamCtx = canvas.getContext('2d');
    webcamCtx.fillRect(0, 0, webcamCanvas.width, webcamCanvas.height);
    document.getElementById("webcam-btn").value = "Open Webcam"
    document.getElementById("webcam-btn").onclick = openWebcam;
}

function captureBackgroundImage() {
    // Save the current canvas after a timer
    const TIMER = 5000;
    const captureBtn = document.getElementById('capture-btn');
    captureBtn.disabled = true;
    captureBtn.value = "5";
    document.getElementById('webcam-btn').disabled = true;
    setTimeout(function () {        
        sendMsg(CAPTURE.GREENSCREEN);
        captureBtn.value = "Capture";
        captureBtn.onclick = captureImage;
        captureBtn.disabled = false;

        document.getElementById('webcam-btn').disabled = false;
    }, TIMER);

    setTimeout(function () {
        captureBtn.value = "4";
        setTimeout(function () {
        captureBtn.value = "3";
        setTimeout(function () {
        captureBtn.value = "2";
        setTimeout(function () {
        captureBtn.value = "1";
        }, TIMER / 5);
        }, TIMER / 5);
        }, TIMER / 5);
    }, TIMER / 5);
}

function captureImage() {
    socket.send('CAPTURE GS');
    const captureBtn = document.getElementById('capture-btn');
    captureBtn.value = "Reset";
    captureBtn.onclick = reset;
    
    captureBtn.disabled = true;
    document.getElementById('webcam-btn').disabled = true;
}

function reset() {
    // Open the webcam again
    let deviceSelect = document.getElementById("devices");
    let device = deviceSelect.value.split(":")[0];
    sendMsg(WEBCAM.OPEN, device);

    const captureBtn = document.getElementById('capture-btn');
    captureBtn.value = "Capture Background";
    captureBtn.onclick = captureBackgroundImage;

    document.getElementById('upload-image-btn').disabled = false;
    document.getElementById('webcam-btn').disabled = false;
}