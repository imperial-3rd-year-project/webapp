let socketOpened = false;
let socket, canvas;
let fetchingDevices = false;
let devices = [];
let dataURL;

const w = 640;
const h = 360;
const p = w * h;

window.onload = function() {
    // Setup canvas
	canvas = document.getElementById(#{toJSON canvasId});
    let ctx = canvas.getContext('2d');
    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);

	// Create WebSocket connection.
	socket = new WebSocket('ws://127.0.0.1:9160');
    socket.binaryType = 'arraybuffer';

	// Connection opened
	socket.addEventListener('open', function (event) {
		socket.send('HELLO');
	});

	// Listen for messages
	socket.addEventListener('message', function (event) {
        if (event.data === "BEGIN DEVLIST") {
            fetchingDevices = true;
        } else if (event.data === "END DEVLIST") {
            fetchingDevices = false;
            // Set the options
            let devicesSelect = document.getElementById("#js-devicesId");
            devices.reverse();
            for (let device of devices) {
                let option = document.createElement("option");
                option.text = device[0] + ": " + device[1];
                console.log(option.text);
                devicesSelect.add(option);
            }
        } else if (fetchingDevices) {
            // Parse device type
            const devicePath = event.data.substr(0, event.data.indexOf('$'));
            const deviceName = event.data.substr(event.data.indexOf('$') + 1);
            const details = [devicePath, deviceName];
            devices.push(details);
        } else {
            let arr = new Uint8Array(event.data);
            let n = p * 4;
            let s = 0;
            let d = 0;
            dest = ctx.getImageData(0, 0, w, h);
            while (d < n) {
                dest.data[d++] = arr[s++];
                dest.data[d++] = arr[s++];
                dest.data[d++] = arr[s++];
                d++;
            }
            ctx = canvas.getContext('2d');
            ctx.putImageData(dest, 0, 0);
        }
	});

    // Switch input modes
    const inputCheckbox = document.getElementById("image-input-checkbox");
    inputCheckbox.addEventListener('change', function (event) {
        if (event.target.checked) {
            // Webcam mode 
            document.getElementById("webcam-input-div").style.display = 'block';
            document.getElementById("upload-image-div").style.display = 'none';
        } else {
            // Upload image
            document.getElementById("webcam-input-div").style.display = 'none';
            document.getElementById("upload-image-div").style.display = 'block';
        }
    });

    document.getElementById("upload-image-input").onchange = function(event) {
        let input = event.target;
        let reader = new FileReader();
        reader.onload = function(){
            dataURL = reader.result;
            let output = document.getElementById('uploaded-image');
            output.src = dataURL;
            console.log(reader.result);
        };
        reader.readAsDataURL(input.files[0]);
    };
};

function openWebcam() {
    let deviceSelect = document.getElementById("#js-devicesId");
    let device = deviceSelect.value.split(":")[0];

    socket.send('OPEN ' + device);
    document.getElementById("webcam-btn").value = "Close Webcam"
    document.getElementById("webcam-btn").onclick = closeWebcam;
}

function closeWebcam() {
    socket.send('CLOSE');
    let ctx = canvas.getContext('2d');
    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
    document.getElementById("webcam-btn").value = "Open Webcam"
    document.getElementById("webcam-btn").onclick = openWebcam;
}
