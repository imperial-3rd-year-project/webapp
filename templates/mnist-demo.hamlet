<div .masthead>
    <div .container>
        <div .row>
            <h1 .header>
                MNIST Demonstration
            <h2>
                Try out below.

        <script type="text/javascript">
            var canvas, ctx, flag = false,
                prevX = 0,
                currX = 0,
                prevY = 0,
                currY = 0,
                dot_flag = false;

            var x = "black",
                y = 2;
            
            var imageData = [];

            function init() {
                canvas = document.getElementById('canvas');
                ctx = canvas.getContext("2d");
                w = canvas.width;
                h = canvas.height;
            
                canvas.addEventListener("mousemove", function (e) {
                    findxy('move', e)
                }, false);
                canvas.addEventListener("mousedown", function (e) {
                    findxy('down', e)
                }, false);
                canvas.addEventListener("mouseup", function (e) {
                    findxy('up', e)
                }, false);
                canvas.addEventListener("mouseout", function (e) {
                    findxy('out', e)
                }, false);
            }
            
            function draw() {
                ctx.beginPath();
                ctx.moveTo(prevX, prevY);
                ctx.lineTo(currX, currY);
                ctx.strokeStyle = x;
                ctx.lineWidth = y;
                ctx.stroke();
                ctx.closePath();
            }
            
            function erase() {
                ctx.clearRect(0, 0, w, h);
                document.getElementById("canvasimg").style.display = "none";
            }
            
            function findxy(res, e) {
                if (res == 'down') {
                    prevX = currX;
                    prevY = currY;
                    const {x, y} = canvas.getBoundingClientRect();
                    currX = e.clientX - x;
                    currY = e.clientY - y;
            
                    flag = true;
                    dot_flag = true;
                    if (dot_flag) {
                        ctx.beginPath();
                        ctx.fillStyle = x;
                        ctx.fillRect(currX, currY, 2, 2);
                        ctx.closePath();
                        dot_flag = false;
                    }
                }
                if (res == 'up' || res == "out") {
                    flag = false;
                    $# imageData = ctx.getImageData(0,0,w,h);
                    $# console.log("data");
                    $# console.log(imageData.data);
                }
                if (res == 'move') {
                    if (flag) {
                        prevX = currX;
                        prevY = currY;
                        const {x, y} = canvas.getBoundingClientRect();
                        currX = e.clientX - x;
                        currY = e.clientY - y;
                        draw();
                    }
                }
            }
        <canvas #"canvas" width="400" height="400" style="background-color: #ffffff;">
        <div class="clearfix"></div>
        <body onload="init()">
            <input type="button" value="clear" id="clr" size="23" onclick="erase()">
        <form .form-horizontal ##{canvasFormId}>

            <button .btn.btn-primary type="submit">

            <ul ##{canvasDataId}>
            $# <textarea #"mnistRes" rows="2" width="200" placeholder="draw a number to be classified." style="colofr: #ffffff;" required></textarea>
        

            


<div .container>
    <!-- Starting
        ================================================== -->
    <div .bs-docs-section>
        <div .row>
            <div .col-lg-12>
                <div .page-header>
                    <h1 #start>Starting

                    <p>
                        Now that you have a working project you should use the
                        <a href=http://www.yesodweb.com/book/>Yesod book</a> to learn more.
                    <p>
                        You can also use this scaffolded site to explore some concepts, and best practices.

                    <ul .list-group>

                        <li .list-group-item>
                            This page was generated by the <tt>#{handlerName}</tt> handler in
                            <tt>Handler/Home.hs</tt>.

                        <li .list-group-item>
                            The <tt>#{handlerName}</tt> handler is set to generate your
                            site's home screen in the Routes file
                            <tt>config/routes.yesodroutes

                        <li .list-group-item>
                            We can link to other handlers, like the <a href="@{CommentR}">Comment</a>.

                        <li .list-group-item>
                            The HTML you are seeing now is actually composed by a number of <em>widgets</em>, #
                            most of them are brought together by the <tt>defaultLayout</tt> function which #
                            is defined in the <tt>Foundation.hs</tt> module, and used by <tt>#{handlerName}</tt>. #
                            All the files for templates and widgets are in <tt>templates</tt>.

                        <li .list-group-item>
                            A Widget's Html, Css and Javascript are separated in three files with the
                            <tt>.hamlet</tt>, <tt>.lucius</tt> and <tt>.julius</tt> extensions.

                        <li .list-group-item ##{aDomId}>
                            If you had javascript enabled then you wouldn't be seeing this.

    <hr>


