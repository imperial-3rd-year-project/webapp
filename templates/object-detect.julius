let dataURL, lastWebcamImage;
let captured = false;

const w = 640;
const h = 480;
const p = w * h;

window.onload = function () {
    let webcamCanvas = document.getElementById("canvas");
    let webcamCtx = webcamCanvas.getContext("2d");
    // Setup webcam canvas
    webcamCtx.fillRect(0, 0, webcamCanvas.width, webcamCanvas.height);
    
    // Setup sockets
    let initialState = {
        webcamCanvas: webcamCanvas,
        webcamCtx: webcamCtx
    };
    let state = buildState(initialState).withWebcam().withYolo().build();
    
    initialiseSocket(state);
    // Order is important!
    addSocketHandler(SOCKET_BEGIN_DEVICES, onBeginDevices);
    addSocketHandler(SOCKET_END_DEVICES, onEndDevices);
    addSocketHandler(SOCKET_RECEIVE_DEVICE, onReceiveDevice);
    
    addSocketHandler(SOCKET_BEGIN_YOLO, onYoloBegin);
    addSocketHandler(SOCKET_END_YOLO, onYoloEnd);
    addSocketHandler(SOCKET_RECEIVE_YOLO, onYoloReceive);
    
    addSocketHandler(SOCKET_RECEIVE_WEBCAM_FRAME, onWebcamFrame);
    setSocketHandler();

    // Switch input modes
    const inputCheckbox = document.getElementById("image-input-checkbox");
    inputCheckbox.addEventListener('change', function (event) {
        if (event.target.checked) {
            // Webcam mode 
            document.getElementById("webcam-input-div").style.display = 'block';
            document.getElementById("upload-image-div").style.display = 'none';
        } else {
            // Upload image
            document.getElementById("webcam-input-div").style.display = 'none';
            document.getElementById("upload-image-div").style.display = 'block';
        }

        document.getElementById("object-label").innerHTML = '';
    });

    document.getElementById("upload-image-input").onchange = function (event) {
        let input = event.target;
        let reader = new FileReader();
        document.getElementById("object-label").innerHTML = 'Detecting objects...';
        reader.onload = function () {
            dataURL = reader.result;
            let img = new Image();
            let output = document.getElementById('uploaded-image');
            let imgCtx = output.getContext('2d');
            img.onload = function () {
                if (img.width > img.height) {
                    let w = img.width * (416 / img.height);
                    imgCtx.drawImage(img, 0, 0, w, 416);
                } else {
                    let h = img.height * (416 / img.width);
                    imgCtx.drawImage(img, 0, 0, 416, h);
                }

                sendMsg(IMAGE.YOLO);
                let buff = imgCtx.getImageData(0, 0, output.width, output.height).data.buffer;
                sendData(buff);

            };
            img.src = dataURL;
        };
        reader.readAsDataURL(input.files[0]);
    };
};

function onWebcamFrame(event, state) {
    if (!captured) {
        drawWebcamImage(event, state);
    }
}

function openWebcam() {
    let deviceSelect = document.getElementById("devices");
    let device = deviceSelect.value.split(":")[0];
    sendMsg(WEBCAM.OPEN, device);
    document.getElementById("capture-btn").style.display = "inline-block";
    document.getElementById("webcam-btn").value = "Close Webcam"
    document.getElementById("webcam-btn").onclick = closeWebcam;
}

function closeWebcam() {
    sendMsg(WEBCAM.CLOSE);
    let webcamCanvas = document.getElementById("canvas");
    let webcamCtx = webcamCanvas.getContext("2d");
    webcamCtx.fillStyle = 'rgb(0, 0, 0)';
    webcamCtx.fillRect(0, 0, webcamCanvas.width, webcamCanvas.height);
    clearCapturedImage();
    document.getElementById("capture-btn").style.display = "none";
    document.getElementById("webcam-btn").value = "Open Webcam";
    document.getElementById("webcam-btn").onclick = openWebcam;
    document.getElementById("object-label").innerHTML = '';
}

function onYoloEnd(event, state) {
    state.fetchingYolo = false;
    captured = false;
    if (state.boundingBoxes.length == 0) {
        document.getElementById("object-label").innerHTML = 'No objects detected.';
    } else {
        document.getElementById("object-label").innerHTML = 'Objects detected!';
    }
    if (!document.getElementById("image-input-checkbox").checked) {
        // draw bounding boxes on the image
        const imgCtx = document.getElementById('uploaded-image').getContext('2d');
        drawBoundingBoxes(state.boundingBoxes, imgCtx);
    } else {
        // draw bounding boxes on top of webcam image
        const webcamCtx = document.getElementById('canvas').getContext('2d');
        webcamCtx.putImageData(lastWebcamImage, 0, 0);
        const captureBtn = document.getElementById('capture-btn');
        captureBtn.value = "New Image";
        captureBtn.disabled = false;
        captureBtn.onclick = function () {
            let deviceSelect = document.getElementById("devices");
            let device = deviceSelect.value.split(":")[0];
            sendMsg(WEBCAM.OPEN, device);
            clearCapturedImage();
        };
        console.log(state.boundingBoxes);
        drawBoundingBoxes(state.boundingBoxes, webcamCtx);
    }
}

function displayWaitMessage(webcamCanvas, webcamCtx) {
    const prevFillStyle = webcamCtx.fillStyle;
    
    webcamCtx.fillStyle = 'rgb(0, 255, 0)';
    webcamCtx.fillRect(0, 0, webcamCanvas.width, webcamCanvas.height);
    
    webcamCtx.font = 'bolder 50px monospace';
    webcamCtx.fillStyle = 'rgb(0, 0, 0)';
    webcamCtx.fillText("WE'LL", 30, 55);
    webcamCtx.fillText("BE", 30, 110);
    webcamCtx.fillText("RIGHT", 30, 165);
    webcamCtx.fillText("BACK", 30, 220);
    
    webcamCtx.fillStyle = 'rgb(255, 255, 255)';
    webcamCtx.fillText("WE'LL", 27, 52);
    webcamCtx.fillText("BE", 27, 107);
    webcamCtx.fillText("RIGHT", 27, 162);
    webcamCtx.fillText("BACK", 27, 217);
    
    webcamCtx.fillStyle = prevFillStyle;
}

function captureImage() {
    document.getElementById("object-label").innerHTML = 'Detecting objects...';
    let webcamCanvas = document.getElementById("canvas");
    let webcamCtx = webcamCanvas.getContext("2d");
    lastWebcamImage = webcamCtx.getImageData(0, 0, w, h);
    sendMsg(CAPTURE.YOLO);
    captured = true;
    document.getElementById("capture-btn").disabled = true;
    displayWaitMessage(webcamCanvas, webcamCtx);
}

function clearCapturedImage() {
    document.getElementById('capture-btn').value = "Capture";
    document.getElementById('capture-btn').onclick = captureImage;
}
